// Copyright (c) 2017, 2024, Oracle and/or its affiliates. All rights reserved.
// Licensed under the Mozilla Public License v2.0

package integrationtest

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"

	"github.com/oracle/terraform-provider-oci/httpreplay"
	"github.com/oracle/terraform-provider-oci/internal/acctest"

	"github.com/oracle/terraform-provider-oci/internal/utils"
)

var (
	DblmVulnerabilitySingularDataSourceRepresentation = map[string]interface{}{
		"compartment_id":   acctest.Representation{RepType: acctest.Required, Create: `${var.compartment_id}`},
		"database_release": acctest.Representation{RepType: acctest.Optional, Create: `databaseRelease`},
		"state":            acctest.Representation{RepType: acctest.Optional, Create: `AVAILABLE`},
	}

	DblmVulnerabilityResourceConfig = ""
)

// issue-routing-tag: dblm/default
func TestDblmVulnerabilityResource_basic(t *testing.T) {
	httpreplay.SetScenario("TestDblmVulnerabilityResource_basic")
	defer httpreplay.SaveScenario()

	config := acctest.ProviderTestConfig()

	compartmentId := utils.GetEnvSettingWithBlankDefault("compartment_ocid")
	compartmentIdVariableStr := fmt.Sprintf("variable \"compartment_id\" { default = \"%s\" }\n", compartmentId)

	singularDatasourceName := "data.oci_dblm_vulnerability.test_vulnerability"

	acctest.SaveConfigContent("", "", "", t)

	acctest.ResourceTest(t, nil, []resource.TestStep{
		// verify singular datasource
		{
			Config: config +
				acctest.GenerateDataSourceFromRepresentationMap("oci_dblm_vulnerability", "test_vulnerability", acctest.Required, acctest.Create, DblmVulnerabilitySingularDataSourceRepresentation) +
				compartmentIdVariableStr + DblmVulnerabilityResourceConfig,
			Check: acctest.ComposeAggregateTestCheckFuncWrapper(
				resource.TestCheckResourceAttrSet(singularDatasourceName, "compartment_id"),
				//resource.TestCheckResourceAttr(singularDatasourceName, "database_release", "databaseRelease"),
				resource.TestCheckResourceAttrSet(singularDatasourceName, "state"),

				resource.TestCheckResourceAttrSet(singularDatasourceName, "message"),
				resource.TestCheckResourceAttrSet(singularDatasourceName, "patch_recommendations_summary.#"),
				//resource.TestCheckResourceAttr(singularDatasourceName, "resources.#", "1"),
				resource.TestCheckResourceAttrSet(singularDatasourceName, "resources_summary.#"),
				resource.TestCheckResourceAttrSet(singularDatasourceName, "state"),
				resource.TestCheckResourceAttrSet(singularDatasourceName, "time_enabled"),
				resource.TestCheckResourceAttrSet(singularDatasourceName, "vulnerabilities_summary.#"),
			),
		},
	})
}
